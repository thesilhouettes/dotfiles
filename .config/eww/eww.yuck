(defwidget bar []
  (centerbox :class "main-box"  :orientation "h"
    (workspaces)
    (music)
    (sidestuff)
  ))

(defwidget sidestuff []
  (box :class "sidestuff" 
       :orientation "h" 
       :halign "end"
       :space-evenly false
    (stuff 
      :label "ðŸ”Š"
      :value volume)
    (stuff
      :label "ðŸ“…"
      :value time)
  ))

(defvar current-workspace 1)
(defvar workspace-numbers "[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]")

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :halign "start"
    (for entry in workspace-numbers
      (button :class {entry == current-workspace ? "active-workspace" : ""} :onclick "wmctrl -s ${entry}" entry) 
    )))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))

(defwidget stuff [label value]
  (box :orientation "h"
       :class "stuff"
       :halign "start"
       :space-evenly false
    (box :class "label" label)
    value
  )
)

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%m %d/%m/%Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :height "40px"
                      :width "100%"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "3%")
  (bar))
